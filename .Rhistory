#Re-Use , Only edit 1 variable
db = AMZN
#Necesitamos 'descargar' bibliotecas de internet para que programar sea más facil
library(ggplot2) #Gráficas
library(dplyr) #Manejo de bases de datos
version
interes = 'Close' #Variable que nos interesa analizar a través del tiempo
#Graficar la serie de tiempo de la variable de interes
ggplot(data=db,aes(x='Date')) + geom_line(aes(y=interes))
# ---- Inspección de la Base ---
summary(db)
#Graficar la serie de tiempo de la variable de interes
ggplot(data=db,aes(x='Date')) + geom_line(data=db,aes(y=interes))
#Graficar la serie de tiempo de la variable de interes
ggplot() + geom_line(data=db,aes(x='Date',y=interes))
#Graficar la serie de tiempo de la variable de interes
ggplot() + geom_line(data=db,aes(x='Date',y='Close'))
#Graficar la serie de tiempo de la variable de interes
ggplot() + geom_line(data=db,aes(x=Date,y=interes))
interes = Close #Variable que nos interesa analizar a través del tiempo
#Graficar la serie de tiempo de la variable de interes
ggplot() +
geom_line(data=db,aes(x=Date,y=Close))+
ggtitle(paste('Series de tiempo de',interes))+
theme_dark()
#Graficar la serie de tiempo de la variable de interes
ggplot() +
geom_line(data=db,aes(x=Date,y=Close))+
ggtitle(paste('Series de tiempo de',interes))+
theme_grey()
#Rendimientos
db = db %>%
mutate(shifted = lag(Close)) %>%
na.omit()
View(db)
db = db %>%
mutate(Rend = (Close/shifted)-1)
#Graficar la serie de tiempo de los rendimientos
ggplot()+
geom_line(data=db,aes(x=Date,y=Rend))+
ggtitle('Series de tiempo de los rendimientos')+
theme_grey()
ggplot()+
geom_histogram(data=db,aes(x=Rend))+
ggtitle('Series de tiempo de los rendimientos')+
theme_grey()
mean(Rend)
#Análisis estadístico
prom = mean(db$Rend)
#Análisis estadístico
prom = mean(db$Rend)
desv = sd(db$Rend)
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend))+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins = 100)+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins = 50)+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins = 40)+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins = 40,binwidth = 1)+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),binwidth = 0.1)+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),binwidth = 0.1,bins=40)+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),binwidth = 10)+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),binwidth = 0.2)+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(data=db,xintercept = prom,color='Red')
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(data=db,xintercept = prom,color='Orange')
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(data=db,xintercept = prom,color='Orange')+
geom_vline(data=db,xintercept = prom-desv,color='Red')+
geom_vline(data=db,xintercept = prom+desv,color='Green')+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom+desv,color='Green')+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green')+
ggtitle('Histograma de los rendimientos')+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green')+
geom_density(data=Rend)
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green')+
geom_density(data=db,aes(y=Rend))
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green')+
geom_density(data=db,aes(x=Rend))
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green')+
geom_density(data=db,aes(x=Rend),color='Purple')
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green',lwd=2)+
geom_density(data=db,aes(x=Rend),color='Purple')
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green',lwd=3)+
geom_density(data=db,aes(x=Rend),color='Purple')
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green',width=3)+
geom_density(data=db,aes(x=Rend),color='Purple')
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green')+
geom_density(data=db,aes(x=Rend),color='Purple',lwd=3)
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green')+
geom_density(data=db,aes(x=Rend),color='Purple',lwd=2)
#Graficar la serie de tiempo de la variable de interes
ggplot() +
geom_line(data=db,aes(x=Date,y=Close))+
ggtitle(paste('Series de tiempo de',interes))+
theme_grey()
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green')+
geom_density(data=db,aes(x=Rend),color='Purple',lwd=2)
help(nortest)
#Anderson-Darling Test
ad.test(db$Rend)
library(nortest)
#Anderson-Darling Test
ad.test(db$Rend)
#Prueba de Lilliefors (Kolmogorov-Smirnov)
lillie.test(db$Rend)
#Prueba de Pearson chi-square
pearson.test(db$Rend)
install.packages('normtest')
#Prueba de Jarque-Bera
jb.norm.test(db$Rend)
library(normtest)
#Prueba de Jarque-Bera
jb.norm.test(db$Rend)
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green')+
geom_density(data=db,aes(x=Rend),color='Purple',lwd=2)
#histograma de los rendimientos
ggplot(data = db, aes(x = Rend)) +
geom_histogram(aes(y = ..density.., fill = ..count..)) +
scale_fill_gradient(low = "#DCDCDC", high = "#7C7C7C") +
stat_function(fun = dnorm, colour = "#0C3D7D9F", args = list(mean = mean(Rend), sd = sd(Rend))) +
ggtitle("Histograma + curva normal teórica")
#histograma de los rendimientos
ggplot(data = db, aes(x = Rend)) +
geom_histogram(aes(y = ..density.., fill = ..count..)) +
scale_fill_gradient(low = "#DCDCDC", high = "#7C7C7C") +
stat_function(data=db,fun = dnorm, colour = "#0C3D7D9F", args = list(mean = mean(Rend), sd = sd(Rend))) +
ggtitle("Histograma + curva normal teórica")
#histograma de los rendimientos
ggplot(data = db, aes(x = Rend)) +
geom_histogram(aes(y = ..density.., fill = ..count..)) +
scale_fill_gradient(low = "#DCDCDC", high = "#7C7C7C") +
stat_function(fun = dnorm, colour = "#0C3D7D9F") +
ggtitle("Histograma + curva normal teórica")
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green')+
geom_density(data=db,aes(x=Rend),color='Purple',lwd=2)
prom+desv
prom-desv
qqplot(db$Rend)
qqplot(y=db$Rend)
qqPlot(db$Rend)
library(car)
qqPlot(db$Rend)
qqPlot(db$Rend, pch = 16, col = c("#178A56AA"), col.lines = 6, cex = 1.5, main = "NORMAL Q-Q PLOT", id = F)
#histograma de los rendimientos
ggplot() +
geom_histogram(data=db,aes(x=Rend),bins=40)+
geom_vline(xintercept = prom,color='Orange')+
geom_vline(xintercept = prom-desv,color='Red')+
geom_vline(xintercept = prom+desv,color='Green')+
geom_density(data=db,aes(x=Rend),color='Purple',lwd=2)
#Graficar la serie de tiempo de los rendimientos
ggplot()+
geom_line(data=db,aes(x=Date,y=Rend))+
ggtitle('Series de tiempo de los rendimientos')+
theme_grey()
domain <- c(1:n_sim)
n_sim = 20
domain <- c(1:n_sim)
library(ggplot2)
base <- 200
mean_expense <- 200
sd_expense <- 50
for(i in domain){
if(i==1){
result[i] = base - rnorm(1,mean_expense,sd_expense)
}else{
result[i] = base - rnorm(1,mean_expense,sd_expense) + result[i-1]
}
}
result <- c()
for(i in domain){
if(i==1){
result[i] = base - rnorm(1,mean_expense,sd_expense)
}else{
result[i] = base - rnorm(1,mean_expense,sd_expense) + result[i-1]
}
}
model <- data.frame(
days = domain,
expenses = result
)
ggplot(data=model)+
geom_point(aes(x=days,y=expenses))
library(ggplot2)
n_sim = 20
domain <- c(1:n_sim)
result <- c()
base <- 200
mean_expense <- 200
sd_expense <- 50
for(i in domain){
if(i==1){
result[i] = base - rnorm(1,mean_expense,sd_expense)
}else{
result[i] = base - rnorm(1,mean_expense,sd_expense) + result[i-1]
}
}
model <- data.frame(
days = domain,
expenses = result
)
ggplot(data=model)+
geom_point(aes(x=days,y=expenses))
ggplot(data=model)+
geom_line(aes(x=days,y=expenses))
plot(result)
200-result
200+result
expense <- function(ndays,bs,me,sde){
n_days = ndays
domain <- c(1:n_days)
result <- c()
base <- bs
mean_expense <- me
sd_expense <- sde
for(i in domain){
if(i==1){
result[i] = base - rnorm(1,mean_expense,sd_expense)
}else{
result[i] = base - rnorm(1,mean_expense,sd_expense) + result[i-1]
}
}
model <- data.frame(
days = domain,
expenses = result
)
ggplot(data=model)+
geom_line(aes(x=days,y=expenses))
}
expense(5,200,150,50)
expense(5,200,200,50)
expense <- function(ndays,bs,me,sde){
n_days = ndays
domain <- c(1:n_days)
result <- c()
base <- bs
mean_expense <- me
sd_expense <- sde
for(i in domain){
if(i==1){
result[i] = base - rnorm(1,mean_expense,sd_expense)
}else{
result[i] = base - rnorm(1,mean_expense,sd_expense) + result[i-1]
}
}
model <- data.frame(
days = domain,
remaining = result
)
ggplot(data=model)+
geom_line(aes(x=days,y=expenses))
}
expense(5,200,150,50)
expense <- function(ndays,bs,me,sde){
n_days = ndays
domain <- c(1:n_days)
result <- c()
base <- bs
mean_expense <- me
sd_expense <- sde
for(i in domain){
if(i==1){
result[i] = base - rnorm(1,mean_expense,sd_expense)
}else{
result[i] = base - rnorm(1,mean_expense,sd_expense) + result[i-1]
}
}
model <- data.frame(
days = domain,
remaining = result
)
ggplot(data=model)+
geom_line(aes(x=days,y=remaining))+
ggtitle('Remaining after n-th day')+
xlab('Days')+
ylab('Remainings')+
theme_bw()
}
expense(5,200,150,50)
expense(5,200,150,50)
expense(5,200,150,50)
expense(5,200,150,50)
expense(5,200,150,50)
expense(5,200,150,50)
expense(5,200,150,50)
expense(5,200,150,50)
expense(5,200,150,50)
expense(5,200,200,50)
expense(5,200,200,50)
expense(5,200,200,50)
expense(5,200,200,50)
expense(5,200,200,50)
expense(5,200,200,50)
expense(5,200,200,50)
expense(5,200,200,50)
qnorm(0.5,0,1)
qnorm(.5,101.2,21)
dnorm(1,0,1)
pnorm(1,0,1)
1-ppois(10,178.75)
pnorm(1.5,0,1)
pnorm(1,0,1)
dnorm(1,0,1)
pnorm(10,0,1)
pnorm(20,16.5,3.70645)
qnorm(.9,16.5,3.70645)
pnorm(1,0,1)
pnorm(1,0,1)
pgamma(-1,10,3)
pgamma(2,10,3)
pgamma(3,10,3)
1 - pgamma(3,10,3)
qgamma(.95,10,3)
qgamma(.025,10,3)
qgamma(.975,10,3)
lambda1 <- seq(0,3,.0001)
d_gamma <- dgamma(lambda1,10,3)
p_gamma <- pgamma(lambda1,10,3)
alpha = 0.95
lambda2 <- qgamma(lambda1+alpha,10,3)
plot(lambda1,lambda2)
lambda1-lambda2
distance <- lambda1-lambda2
plot(distance)
distance <- lambda2-lambda1
plot(distance)
lambda1 <- seq(0,3,.0001)
d_gamma <- dgamma(lambda1,10,3)
p_gamma <- pgamma(lambda1,10,3)
alpha = 0.95
lambda2 <- qgamma(p_gamma+alpha,10,3)
distance <- lambda2-lambda1
lambda1 <- seq(0,3,.0001)
d_gamma <- dgamma(lambda1,10,3)
p_gamma <- pgamma(lambda1,10,3)
alpha = 0.95
lambda2 <- qgamma(p_gamma+alpha,10,3)
min(distance)
distance
min(distance, na.rm=T)
m <- min(distance, na.rm=T)
targ_index <- which(distance==m)
targ_index
l1 <- lambda1[targ_index]
l2 <- lambda2[targ_index]
l1
l2
1-dpois(10,187.5)
install.packages('JAGS')
install.packages('rjags')
install.packages('jags')
```{r}
plot(cars)
print("Hello")
p = 0.01
dominio = seq(1,200,1)
prob = pgeom(dominio,p)
plot(dominio,prob)
#Database structure
colnames(df)
View(db)
#Fijamos la Working Directory a donde se encuentre el archivo
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
#Libraries
library(ggplot2)
library(dplyr)
#Data
df <- read.csv('./Data/diabetes-dataset.csv')
#Database structure
colnames(df)
corrplot(df)
ggplot(df,aes(x=Age,y=Outcome)) + geom_bar()
ggplot(df,aes(x=Age,y=Outcome)) + geom_boxplot()
View(df)
ggplot(df,aes(x=Age)) + geom_boxplot()
ggplot(df,aes(x=Age,fill=Outcome)) + geom_boxplot()
ggplot(df,aes(x=Age,color=Outcome)) + geom_boxplot()
ggplot(df,aes(x=Age),fill=Outcome) + geom_boxplot()
ggplot(df,aes(x=Outcome,y=Age)) + geom_boxplot()
df$Outcome
summary(df)
df$Outcome <- as.factor(df$Outcome)
summary(df)
ggplot(data=df) + geom_boxplot(aes(x=Outcome,y=Age))
ggplot(data=df) + geom_boxplot(aes(x=Outcome,y=Age,fill=Age))
ggplot(data=df) + geom_boxplot(aes(x=Outcome,y=Age,color=Age))
ggplot(data=df) + geom_boxplot(aes(x=Outcome,y=Age),color=Age)
ggplot(data=df) + geom_boxplot(aes(x=Outcome,y=Age)) +
ggtitle("Outcome vs Age")
ggplot(data=df) + geom_boxplot(aes(x=Outcome,y=Pregnancies)) +
ggtitle("Outcome vs Age")
